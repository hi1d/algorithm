# 문제
# 어느 날, 미르코는 우연히 길거리에서 양수 N을 보았다. 

# 미르코는 30이란 수를 존경하기 때문에, 그는 길거리에서 찾은 수에 포함된 숫자들을 섞어 30의 배수가 되는 가장 큰 수를 만들고 싶어한다.

# 미르코를 도와 그가 만들고 싶어하는 수를 계산하는 프로그램을 작성하라.

# 입력
# N을 입력받는다. N는 최대 105개의 숫자로 구성되어 있으며, 0으로 시작하지 않는다.

# 출력
# 미르코가 만들고 싶어하는 수가 존재한다면 그 수를 출력하라. 그 수가 존재하지 않는다면, -1을 출력하라.

# 예제 입력 1 
# 30
# 예제 출력 1 
# 30
# 예제 입력 2 
# 102
# 예제 출력 2 
# 210
# 예제 입력 3 
# 2931
# 예제 출력 3 
# -1
# 예제 입력 4 
# 80875542
# 예제 출력 4 
# 88755420

# import sys

# input = sys.stdin.readline

# N = sorted(list(str(int(input()))),reverse=True)
# if N[-1] != '0' or sum(map(int, N[:-1]))%3:
#     print(-1)
# else:
#     print(''.join(N))

# ==========================================================================

# 문제
# 어떤 나라에 N개의 도시가 있다. 

# 이 도시들은 일직선 도로 위에 있다. 

# 편의상 일직선을 수평 방향으로 두자. 

# 제일 왼쪽의 도시에서 제일 오른쪽의 도시로 자동차를 이용하여 이동하려고 한다. 

# 인접한 두 도시 사이의 도로들은 서로 길이가 다를 수 있다. 

# 도로 길이의 단위는 km를 사용한다.

# 처음 출발할 때 자동차에는 기름이 없어서 주유소에서 기름을 넣고 출발하여야 한다. 

# 기름통의 크기는 무제한이어서 얼마든지 많은 기름을 넣을 수 있다. 

# 도로를 이용하여 이동할 때 1km마다 1리터의 기름을 사용한다. 

# 각 도시에는 단 하나의 주유소가 있으며, 도시 마다 주유소의 리터당 가격은 다를 수 있다. 

# 가격의 단위는 원을 사용한다.

# 예를 들어, 이 나라에 다음 그림처럼 4개의 도시가 있다고 하자. 

# 원 안에 있는 숫자는 그 도시에 있는 주유소의 리터당 가격이다. 

# 도로 위에 있는 숫자는 도로의 길이를 표시한 것이다. 

# 제일 왼쪽 도시에서 6리터의 기름을 넣고, 더 이상의 주유 없이 제일 오른쪽 도시까지 이동하면 총 비용은 30원이다. 

# 만약 제일 왼쪽 도시에서 2리터의 기름을 넣고(2×5 = 10원) 다음 번 도시까지 이동한 후 

# 3리터의 기름을 넣고(3×2 = 6원) 다음 도시에서 1리터의 기름을 넣어(1×4 = 4원) 제일 오른쪽 도시로 이동하면, 

# 총 비용은 20원이다. 

# 또 다른 방법으로 제일 왼쪽 도시에서 2리터의 기름을 넣고(2×5 = 10원) 다음 번 도시까지 이동한 후 

# 4리터의 기름을 넣고(4×2 = 8원) 제일 오른쪽 도시까지 이동하면, 총 비용은 18원이다.

# 각 도시에 있는 주유소의 기름 가격과, 

# 각 도시를 연결하는 도로의 길이를 입력으로 받아 제일 왼쪽 도시에서 제일 오른쪽 도시로 이동하는 최소의 비용을 계산하는 프로그램을 작성하시오.

# 입력
# 표준 입력으로 다음 정보가 주어진다. 

# 첫 번째 줄에는 도시의 개수를 나타내는 정수 N(2 ≤ N ≤ 100,000)이 주어진다. 

# 다음 줄에는 인접한 두 도시를 연결하는 도로의 길이가 제일 왼쪽 도로부터 N-1개의 자연수로 주어진다. 

# 다음 줄에는 주유소의 리터당 가격이 제일 왼쪽 도시부터 순서대로 N개의 자연수로 주어진다. 

# 제일 왼쪽 도시부터 제일 오른쪽 도시까지의 거리는 1이상 1,000,000,000 이하의 자연수이다. 

# 리터당 가격은 1 이상 1,000,000,000 이하의 자연수이다. 

# 출력
# 표준 출력으로 제일 왼쪽 도시에서 제일 오른쪽 도시로 가는 최소 비용을 출력한다. 

# 서브태스크
# 번호	배점	제한
# 1	17	
# 모든 주유소의 리터당 가격은 1원이다.

# 2	41	
# 2 ≤ N ≤ 1,000, 제일 왼쪽 도시부터 제일 오른쪽 도시까지의 거리는 최대 10,000, 리터 당 가격은 최대 10,000이다.

# 3	42	
# 원래의 제약조건 이외에 아무 제약조건이 없다.

# 예제 입력 1 
# 4
# 2 3 1
# 5 2 4 1
# 예제 출력 1 
# 18
# 예제 입력 2 
# 4
# 3 3 4
# 1 1 1 1
# 예제 출력 2 
# 10

# import sys

# input = sys.stdin.readline

# N = int(input())
# length = list(map(int, input().split()))
# price = list(map(int, input().split()[:-1]))
# min_price = price[0]
# pay = 0
# for i in range(len(price)):
#     if min_price > price[i]:
#         min_price = price[i]
#     pay += (min_price*length[i])

# print(pay)

# ==========================================================================


# 문제
# 서로 다른 N개의 자연수의 합이 S라고 한다. 

# S를 알 때, 자연수 N의 최댓값은 얼마일까?

# 입력
# 첫째 줄에 자연수 S(1 ≤ S ≤ 4,294,967,295)가 주어진다.

# 출력
# 첫째 줄에 자연수 N의 최댓값을 출력한다.

# 예제 입력 1 
# 200
# 예제 출력 1 
# 19

import sys

input = sys.stdin.readline
S = int(input())
sum_num = 0
count = 0

for i in range(1, S+1):
    sum_num += i
    count += 1
    if sum_num > S:
        count -= 1
        break

print(count)



